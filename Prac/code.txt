ong power(long a,long b)
{
  long i = 0;
  long j = 0;
  long x = 1;
  long y = 1;
  while (i < a)
   {
     x = 2 * x;
     i++;
   }
  while(j < b)
   {
     y = y * 3;
     j++;
   }
   return(x * y);
}
long * GenSeq(int Size,long * count)
{
  int length = 0;
  int i = 0;
  int j = 0;
  long value = 0;
  long k = 0;
  long * arrayel = malloc(sizeof(long) * Size);
  for (i = 0; i < Size;i++)
  { 
     
     for(j = 0; j <= i; j++)
     {
        value = power(i - j,j);//pow(2,i -j) * pow(3,j)
        if (value < Size)
        {
           arrayel[k] = value;
           length++;
           //printf("%lu\n",arrayel[k]);
           k++;
           *count = length;
        }
        else
        {
           if(power(i + 1, 0) > Size)//pow(2,i +1) * pow(3,0)
              {
                 return arrayel;            // go to the next row calculate first element of the next row
              }
           j = i + 1;
        }  
      }
  }  
  return arrayel;
}
